// Global Mixins
//------------------------------------------------------

// Set opacity
@mixin opacity($opacity:50, $filter: true) {
	opacity: $opacity / 100;
	@if $filter {
		filter: alpha(opacity=$opacity);
	}
}

// Ellipsis text
@mixin ellipsis($width: 100%) {
  display: inline-block;
  max-width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// REM sizing
///////////////////////////////////
@mixin font-size($sizeValue: 1.6, $line: $sizeValue * 1.5){
  font-size: ($sizeValue * 1) + px;
  line-height: ($line * 1) + px;
  font-size: ($sizeValue / 10) + rem;
  line-height: ($line / 10) + rem;
}

// Add across browser prefixes
@mixin prefixer($property, $value, $prefixes: webkit moz spec) {
	@if $experimental {
		@each $prefix in $prefixes {
			@if $prefix != spec {
				@if $property == border-top-left-radius and $prefix == moz {
					@if $prefix-moz {
						-moz-border-radius-topleft: $value;
					}
				} @else if $property == border-top-right-radius and $prefix == moz {
					@if $prefix-moz {
						-moz-border-radius-topright: $value;
					}
				} @else if $property == border-bottom-right-radius and $prefix == moz {
					@if $prefix-moz {
						-moz-border-radius-bottomright: $value;
					}
				} @else if $property == border-bottom-left-radius and $prefix == moz {
					@if $prefix-moz {
						-moz-border-radius-bottomleft: $value;
					}
				} @else {
					@if $prefix == webkit {
					  @if $prefix-webkit {
					    -webkit-#{$property}: $value;
					  }
					}
					@if $prefix == moz {
					  @if $prefix-moz {
					    -moz-#{$property}: $value;
					  }
					}
				}
			} @else {
			  @if $prefix-spec {
			    #{$property}: $value;
			  }
			}
		}
	}
}

